package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Optional;

@Controller // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /api
public class MainController {
    @Autowired // This means to get the bean called transactionRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TransactionRepository transactionRepository;

    /*@PostMapping(path="/addTransaction") // Map ONLY POST Requests
    public @ResponseBody String addNewTransaction(@RequestParam String sender
            , @RequestParam String recipient, @RequestParam Double transaction_value) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the request


    }*/

    /*@GetMapping(path="/transaction")
    public @ResponseBody Optional<Transaction> getById(@RequestParam Integer id) {
        // This returns a JSON or XML with the users


    }*/

    /*@GetMapping(path="/allAvailableTransactions")
    public @ResponseBody Iterable<Transaction> getAllUsers() {

    }*/

    /*@GetMapping(path="/sumTransactions")
    public @ResponseBody Double getSumTransactions() {

    }*/

    /*@PutMapping(path="/updateTransaction")
    public @ResponseBody Optional<Transaction> updateTransactionValue(@RequestParam Integer id,
                                                                      @RequestParam Double transaction_value) {

    }*/

    /*@DeleteMapping(path="/deleteTransaction")
    public @ResponseBody String softDeleteTransaction(@RequestParam Integer id) {

    }*/
}